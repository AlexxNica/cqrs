0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.0.0
3 info using node@v0.11.14
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add spec="." args=[".",null]
7 verbose parsed spec { raw: '.',
7 verbose parsed spec   scope: null,
7 verbose parsed spec   name: null,
7 verbose parsed spec   rawSpec: '.',
7 verbose parsed spec   spec: '/Users/brighthas/project/cqrs',
7 verbose parsed spec   type: 'local' }
8 verbose cache add local package /Users/brighthas/project/cqrs
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/brighthas/.npm/3a52ce78-.lock
11 verbose tar pack [ '/Users/brighthas/.npm/cqrs/0.1.1/package.tgz', '.' ]
12 verbose tarball /Users/brighthas/.npm/cqrs/0.1.1/package.tgz
13 verbose folder .
14 info prepublish cqrs@0.1.1
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /Users/brighthas/.npm/1f1177db-tar.lock
17 silly lockFile 7b151bc6-hthas-npm-cqrs-0-1-1-package-tgz tar:///Users/brighthas/.npm/cqrs/0.1.1/package.tgz
18 verbose lock tar:///Users/brighthas/.npm/cqrs/0.1.1/package.tgz /Users/brighthas/.npm/7b151bc6-hthas-npm-cqrs-0-1-1-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 7b151bc6-hthas-npm-cqrs-0-1-1-package-tgz tar:///Users/brighthas/.npm/cqrs/0.1.1/package.tgz
22 silly lockFile 7b151bc6-hthas-npm-cqrs-0-1-1-package-tgz tar:///Users/brighthas/.npm/cqrs/0.1.1/package.tgz
23 silly lockFile 9473ecb1-brighthas-npm-cqrs-0-1-1-package /Users/brighthas/.npm/cqrs/0.1.1/package
24 verbose lock /Users/brighthas/.npm/cqrs/0.1.1/package /Users/brighthas/.npm/9473ecb1-brighthas-npm-cqrs-0-1-1-package.lock
25 silly lockFile 9473ecb1-brighthas-npm-cqrs-0-1-1-package /Users/brighthas/.npm/cqrs/0.1.1/package
26 silly lockFile 9473ecb1-brighthas-npm-cqrs-0-1-1-package /Users/brighthas/.npm/cqrs/0.1.1/package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'cqrs',
29 silly publish   version: '0.1.1',
29 silly publish   description: 'cqrs for javascript',
29 silly publish   main: 'index.js',
29 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
29 silly publish   repository: { type: 'git', url: 'https://github.com/leogiese/cqrs' },
29 silly publish   keywords: [ 'ddd', 'cqrs', 'domain' ],
29 silly publish   author: { name: 'leogiese' },
29 silly publish   license: 'MIT',
29 silly publish   bugs: { url: 'https://github.com/leogiese/cqrs/issues' },
29 silly publish   homepage: 'https://github.com/leogiese/cqrs',
29 silly publish   dependencies:
29 silly publish    { co: '^3.1.0',
29 silly publish      command: 'git://github.com/leogiese/command',
29 silly publish      debug: '^2.1.0',
29 silly publish      eventstore: '^1.1.2',
29 silly publish      q: '^1.1.2',
29 silly publish      shortid: '^2.0.1',
29 silly publish      thunkify: '^2.1.2',
29 silly publish      traceur: '0.0.74',
29 silly publish      underscore: '^1.7.0' },
29 silly publish   devDependencies: { mocha: '^2.0.1', should: '^4.3.0' },
29 silly publish   directories: { example: 'example', test: 'test' },
29 silly publish   readme: '#### DDD-CQRS-Actor framework for javascript.\n\n\n![](https://raw.githubusercontent.com/leogiese/cqrs/master/img.png)\n\nInstall\n=======\n\n    npm install cqrs --save\n\nUse\n===\n\n#### create a domain\n\n    var domain = require("cqrs")();\n\n    or\n\n    var domain = require("cqrs")(options);\n\n+ options for eventstore , see [eventstore - Provide implementation for storage](https://github.com/adrai/node-eventstore#provide-implementation-for-storage)\n\n#### domain#register\n\nregister Actor class , Actor like DDD\'s AggregateRoot.\n\ne.g.\n\n    domain.register("User",{\n        changeName:function(name){},\n        when:function(event){}\n    })\n\nor\n\n\n    var Actor = require("cqrs").Actor;\n    var User = Actor.extend("User",{\n         changeName:function(name){},\n         when:function(event){}\n    })\n    domain.register(User);\n\n\n\n#### domain#create(typeName,data,callback)\n\ncreate actor object.\n\n    domain.create("User",data,function(err,actorId){})\n\n#### domain#addListener(eventName,handleFunction)\n\nlisten a domain event.\n\n    domain.addListener("User:changeName",function(domainEvent){});\n\n#### domain#get(typeName,actorId,callback)\n\n    domain.get("User","id0001" , function(err , actor){ })\n\nActor API\n=========\n\n#### Defined Actor class\n\n    var User = Actor.extend("User",options);\n\n\n#### Defined methods\n\n    Actor.extend("User",{\n        changeName:function(name){\n            // you can validat and throw error ...\n            di.apply("changeName",name);\n        },\n        when:function(event){\n            //see next step\n        }\n    })\n\nor\n\n    Actor.extend("User",{\n        changeName:true,\n        when:function(event){\n            //see next step\n        }\n    })\n\n`changeName:true` Equivalent to\n\n    changeName:function(data){\n        this.apply("changeName",data.name);\n    }\n\n`change:["name","age"]` Equivalent to\n\n    change:function(data){\n        this.apply("change" , {name:data["name"],age:data["age"]})\n    }\n\nthe method cann\'t change self data. and must use `when` method to changed.\n\n#### Actor#when(event)\n\nThe method only set self data according `event` , no only logic code.\n\n+ event , domain event.\n\ne.g.\n\n    Actor.extend("User",{\n        changeName:function(name){\n            this.apply("changeName",name);\n        },\n        when:function(event){\n            if(event.name === "changName"){\n                this._data.name = event.data;\n            }\n        }\n    })\n\n#### Actor#toJSON(actor)\n\nstatic method\n\n#### Actor#parse(json)\n\nstatic method\n\nLICENSE\n=======\nMIT',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: '9874569ed2b094cf17cef3048c136f4483a91f34',
29 silly publish   _id: 'cqrs@0.1.1',
29 silly publish   _shasum: '5fb5ad0e6441fd9687e9ace8b024ab27c2f185e4',
29 silly publish   _from: '.' }
30 verbose mapToRegistry name cqrs
31 verbose mapToRegistry uri https://registry.npmjs.org/cqrs
32 verbose publish registryBase https://registry.npmjs.org/
33 verbose request on initialization, where is /cqrs
34 verbose request after pass 1, where is /cqrs
35 verbose request url raw /cqrs
36 verbose request resolving registry [ 'https://registry.npmjs.org/', './cqrs' ]
37 verbose request after pass 2, where is https://registry.npmjs.org/cqrs
38 verbose request sending authorization for write operation
39 info attempt registry request try #1 at 10:32:13
40 verbose request id 4ff408d618999ae8
41 http request PUT https://registry.npmjs.org/cqrs
42 http 403 https://registry.npmjs.org/cqrs
43 verbose headers { date: 'Thu, 18 Dec 2014 02:32:15 GMT',
43 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
43 verbose headers   'content-type': 'application/json',
43 verbose headers   'cache-control': 'max-age=60',
43 verbose headers   'content-length': '6220',
43 verbose headers   'accept-ranges': 'bytes',
43 verbose headers   via: '1.1 varnish',
43 verbose headers   'x-served-by': 'cache-ty67-TYO',
43 verbose headers   'x-cache': 'MISS',
43 verbose headers   'x-cache-hits': '0',
43 verbose headers   'x-timer': 'S1418869934.623523,VS0,VE785',
43 verbose headers   connection: 'close' }
44 error publish Failed PUT 403
45 verbose stack Error: forbidden cannot modify pre-existing version: 0.1.1
45 verbose stack old={"name":"cqrs","version":"0.1.1","description":"cqrs for javascript","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/leogiese/cqrs"},"keywords":["ddd","cqrs","domain"],"author":{"name":"leogiese"},"license":"MIT","bugs":{"url":"https://github.com/leogiese/cqrs/issues"},"homepage":"https://github.com/leogiese/cqrs","dependencies":{"co":"^3.1.0","command":"git://github.com/leogiese/command","debug":"^2.1.0","eventstore":"^1.1.2","q":"^1.1.2","shortid":"^2.0.1","thunkify":"^2.1.2","traceur":"0.0.74","underscore":"^1.7.0"},"devDependencies":{"mocha":"^2.0.1","should":"^4.3.0"},"directories":{"example":"example","test":"test"},"gitHead":"9874569ed2b094cf17cef3048c136f4483a91f34","_id":"cqrs@0.1.1","_shasum":"b0dcf0fc6c3ae1d0dcc7d05dde10fd4bc4f5f477","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"leogiese","email":"leogiese0@gmail.com"},"maintainers":[{"name":"petrjanda","email":"petrjanda@me.com"},{"name":"leogiese","email":"leogiese0@gmail.com"}],"dist":{"shasum":"b0dcf0fc6c3ae1d0dcc7d05dde10fd4bc4f5f477","tarball":"http://registry.npmjs.org/cqrs/-/cqrs-0.1.1.tgz"}}
45 verbose stack new={"name":"cqrs","version":"0.1.1","description":"cqrs for javascript","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/leogiese/cqrs"},"keywords":["ddd","cqrs","domain"],"author":{"name":"leogiese"},"license":"MIT","bugs":{"url":"https://github.com/leogiese/cqrs/issues"},"homepage":"https://github.com/leogiese/cqrs","dependencies":{"co":"^3.1.0","command":"git://github.com/leogiese/command","debug":"^2.1.0","eventstore":"^1.1.2","q":"^1.1.2","shortid":"^2.0.1","thunkify":"^2.1.2","traceur":"0.0.74","underscore":"^1.7.0"},"devDependencies":{"mocha":"^2.0.1","should":"^4.3.0"},"directories":{"example":"example","test":"test"},"readme":"#### DDD-CQRS-Actor framework for javascript.\u000a\u000a\u000a![](https://raw.githubusercontent.com/leogiese/cqrs/master/img.png)\u000a\u000aInstall\u000a=======\u000a\u000a    npm install cqrs --save\u000a\u000aUse\u000a===\u000a\u000a#### create a domain\u000a\u000a    var domain = require(\"cqrs\")();\u000a\u000a    or\u000a\u000a    var domain = require(\"cqrs\")(options);\u000a\u000a+ options for eventstore , see [eventstore - Provide implementation for storage](https://github.com/adrai/node-eventstore#provide-implementation-for-storage)\u000a\u000a#### domain#register\u000a\u000aregister Actor class , Actor like DDD's AggregateRoot.\u000a\u000ae.g.\u000a\u000a    domain.register(\"User\",{\u000a        changeName:function(name){},\u000a        when:function(event){}\u000a    })\u000a\u000aor\u000a\u000a\u000a    var Actor = require(\"cqrs\").Actor;\u000a    var User = Actor.extend(\"User\",{\u000a         changeName:function(name){},\u000a         when:function(event){}\u000a    })\u000a    domain.register(User);\u000a\u000a\u000a\u000a#### domain#create(typeName,data,callback)\u000a\u000acreate actor object.\u000a\u000a    domain.create(\"User\",data,function(err,actorId){})\u000a\u000a#### domain#addListener(eventName,handleFunction)\u000a\u000alisten a domain event.\u000a\u000a    domain.addListener(\"User:changeName\",function(domainEvent){});\u000a\u000a#### domain#get(typeName,actorId,callback)\u000a\u000a    domain.get(\"User\",\"id0001\" , function(err , actor){ })\u000a\u000aActor API\u000a=========\u000a\u000a#### Defined Actor class\u000a\u000a    var User = Actor.extend(\"User\",options);\u000a\u000a\u000a#### Defined methods\u000a\u000a    Actor.extend(\"User\",{\u000a        changeName:function(name){\u000a            // you can validat and throw error ...\u000a            di.apply(\"changeName\",name);\u000a        },\u000a        when:function(event){\u000a            //see next step\u000a        }\u000a    })\u000a\u000aor\u000a\u000a    Actor.extend(\"User\",{\u000a        changeName:true,\u000a        when:function(event){\u000a            //see next step\u000a        }\u000a    })\u000a\u000a`changeName:true` Equivalent to\u000a\u000a    changeName:function(data){\u000a        this.apply(\"changeName\",data.name);\u000a    }\u000a\u000a`change:[\"name\",\"age\"]` Equivalent to\u000a\u000a    change:function(data){\u000a        this.apply(\"change\" , {name:data[\"name\"],age:data[\"age\"]})\u000a    }\u000a\u000athe method cann't change self data. and must use `when` method to changed.\u000a\u000a#### Actor#when(event)\u000a\u000aThe method only set self data according `event` , no only logic code.\u000a\u000a+ event , domain event.\u000a\u000ae.g.\u000a\u000a    Actor.extend(\"User\",{\u000a        changeName:function(name){\u000a            this.apply(\"changeName\",name);\u000a        },\u000a        when:function(event){\u000a            if(event.name === \"changName\"){\u000a                this._data.name = event.data;\u000a            }\u000a        }\u000a    })\u000a\u000a#### Actor#toJSON(actor)\u000a\u000astatic method\u000a\u000a#### Actor#parse(json)\u000a\u000astatic method\u000a\u000aLICENSE\u000a=======\u000aMIT","readmeFilename":"README.md","gitHead":"9874569ed2b094cf17cef3048c136f4483a91f34","_id":"cqrs@0.1.1","_shasum":"5fb5ad0e6441fd9687e9ace8b024ab27c2f185e4","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"leogiese","email":"leogiese0@gmail.com"},"maintainers":[{"name":"leogiese","email":"leogiese0@gmail.com"}],"dist":{"shasum":"5fb5ad0e6441fd9687e9ace8b024ab27c2f185e4","tarball":"http://registry.npmjs.org/cqrs/-/cqrs-0.1.1.tgz"}}: cqrs
45 verbose stack     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:261:14)
45 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:198:65)
45 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:236:22)
45 verbose stack     at Request.emit (events.js:110:17)
45 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1142:14)
45 verbose stack     at Request.emit (events.js:129:20)
45 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1096:12)
45 verbose stack     at IncomingMessage.emit (events.js:129:20)
45 verbose stack     at _stream_readable.js:907:16
45 verbose stack     at process._tickCallback (node.js:372:11)
46 verbose statusCode 403
47 verbose pkgid cqrs
48 verbose cwd /Users/brighthas/project/cqrs
49 error Darwin 14.0.0
50 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
51 error node v0.11.14
52 error npm  v2.0.0
53 error code E403
54 error forbidden cannot modify pre-existing version: 0.1.1
54 error old={"name":"cqrs","version":"0.1.1","description":"cqrs for javascript","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/leogiese/cqrs"},"keywords":["ddd","cqrs","domain"],"author":{"name":"leogiese"},"license":"MIT","bugs":{"url":"https://github.com/leogiese/cqrs/issues"},"homepage":"https://github.com/leogiese/cqrs","dependencies":{"co":"^3.1.0","command":"git://github.com/leogiese/command","debug":"^2.1.0","eventstore":"^1.1.2","q":"^1.1.2","shortid":"^2.0.1","thunkify":"^2.1.2","traceur":"0.0.74","underscore":"^1.7.0"},"devDependencies":{"mocha":"^2.0.1","should":"^4.3.0"},"directories":{"example":"example","test":"test"},"gitHead":"9874569ed2b094cf17cef3048c136f4483a91f34","_id":"cqrs@0.1.1","_shasum":"b0dcf0fc6c3ae1d0dcc7d05dde10fd4bc4f5f477","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"leogiese","email":"leogiese0@gmail.com"},"maintainers":[{"name":"petrjanda","email":"petrjanda@me.com"},{"name":"leogiese","email":"leogiese0@gmail.com"}],"dist":{"shasum":"b0dcf0fc6c3ae1d0dcc7d05dde10fd4bc4f5f477","tarball":"http://registry.npmjs.org/cqrs/-/cqrs-0.1.1.tgz"}}
54 error new={"name":"cqrs","version":"0.1.1","description":"cqrs for javascript","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/leogiese/cqrs"},"keywords":["ddd","cqrs","domain"],"author":{"name":"leogiese"},"license":"MIT","bugs":{"url":"https://github.com/leogiese/cqrs/issues"},"homepage":"https://github.com/leogiese/cqrs","dependencies":{"co":"^3.1.0","command":"git://github.com/leogiese/command","debug":"^2.1.0","eventstore":"^1.1.2","q":"^1.1.2","shortid":"^2.0.1","thunkify":"^2.1.2","traceur":"0.0.74","underscore":"^1.7.0"},"devDependencies":{"mocha":"^2.0.1","should":"^4.3.0"},"directories":{"example":"example","test":"test"},"readme":"#### DDD-CQRS-Actor framework for javascript.\u000a\u000a\u000a![](https://raw.githubusercontent.com/leogiese/cqrs/master/img.png)\u000a\u000aInstall\u000a=======\u000a\u000a    npm install cqrs --save\u000a\u000aUse\u000a===\u000a\u000a#### create a domain\u000a\u000a    var domain = require(\"cqrs\")();\u000a\u000a    or\u000a\u000a    var domain = require(\"cqrs\")(options);\u000a\u000a+ options for eventstore , see [eventstore - Provide implementation for storage](https://github.com/adrai/node-eventstore#provide-implementation-for-storage)\u000a\u000a#### domain#register\u000a\u000aregister Actor class , Actor like DDD's AggregateRoot.\u000a\u000ae.g.\u000a\u000a    domain.register(\"User\",{\u000a        changeName:function(name){},\u000a        when:function(event){}\u000a    })\u000a\u000aor\u000a\u000a\u000a    var Actor = require(\"cqrs\").Actor;\u000a    var User = Actor.extend(\"User\",{\u000a         changeName:function(name){},\u000a         when:function(event){}\u000a    })\u000a    domain.register(User);\u000a\u000a\u000a\u000a#### domain#create(typeName,data,callback)\u000a\u000acreate actor object.\u000a\u000a    domain.create(\"User\",data,function(err,actorId){})\u000a\u000a#### domain#addListener(eventName,handleFunction)\u000a\u000alisten a domain event.\u000a\u000a    domain.addListener(\"User:changeName\",function(domainEvent){});\u000a\u000a#### domain#get(typeName,actorId,callback)\u000a\u000a    domain.get(\"User\",\"id0001\" , function(err , actor){ })\u000a\u000aActor API\u000a=========\u000a\u000a#### Defined Actor class\u000a\u000a    var User = Actor.extend(\"User\",options);\u000a\u000a\u000a#### Defined methods\u000a\u000a    Actor.extend(\"User\",{\u000a        changeName:function(name){\u000a            // you can validat and throw error ...\u000a            di.apply(\"changeName\",name);\u000a        },\u000a        when:function(event){\u000a            //see next step\u000a        }\u000a    })\u000a\u000aor\u000a\u000a    Actor.extend(\"User\",{\u000a        changeName:true,\u000a        when:function(event){\u000a            //see next step\u000a        }\u000a    })\u000a\u000a`changeName:true` Equivalent to\u000a\u000a    changeName:function(data){\u000a        this.apply(\"changeName\",data.name);\u000a    }\u000a\u000a`change:[\"name\",\"age\"]` Equivalent to\u000a\u000a    change:function(data){\u000a        this.apply(\"change\" , {name:data[\"name\"],age:data[\"age\"]})\u000a    }\u000a\u000athe method cann't change self data. and must use `when` method to changed.\u000a\u000a#### Actor#when(event)\u000a\u000aThe method only set self data according `event` , no only logic code.\u000a\u000a+ event , domain event.\u000a\u000ae.g.\u000a\u000a    Actor.extend(\"User\",{\u000a        changeName:function(name){\u000a            this.apply(\"changeName\",name);\u000a        },\u000a        when:function(event){\u000a            if(event.name === \"changName\"){\u000a                this._data.name = event.data;\u000a            }\u000a        }\u000a    })\u000a\u000a#### Actor#toJSON(actor)\u000a\u000astatic method\u000a\u000a#### Actor#parse(json)\u000a\u000astatic method\u000a\u000aLICENSE\u000a=======\u000aMIT","readmeFilename":"README.md","gitHead":"9874569ed2b094cf17cef3048c136f4483a91f34","_id":"cqrs@0.1.1","_shasum":"5fb5ad0e6441fd9687e9ace8b024ab27c2f185e4","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"leogiese","email":"leogiese0@gmail.com"},"maintainers":[{"name":"leogiese","email":"leogiese0@gmail.com"}],"dist":{"shasum":"5fb5ad0e6441fd9687e9ace8b024ab27c2f185e4","tarball":"http://registry.npmjs.org/cqrs/-/cqrs-0.1.1.tgz"}}: cqrs
55 error If you need help, you may report this error at:
55 error     <http://github.com/npm/npm/issues>
56 verbose exit [ 1, true ]
